/*
 * Segnivo Developer API
 * **API Version**: 1.7  **Date**: 9th July, 2024  ## ðŸ“„ Getting Started  This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.  Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.  The API must not be abused and should be used within acceptable limits.  To start using this API, you will need not create or access an existing Segnivo account to obtain your API key ([retrievable from your account settings](https://messaging.segnivo.com/account/api)).  - You must use a valid API Key to send requests to the API endpoints.      - The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP 301 redirect to the corresponding HTTPS resources.      - The API returns request responses in JSON format. When an API request returns an error, it is sent in the JSON response as an error key or with details in the message key.       ### ðŸ”– **Need some help?**  In case you have questions or need clarity with interacting with some endpoints feel free to create a support ticket on your account or you can send an email ([<i>developers@segnivo.com</i>](https://mailto:developers@segnivo.com)) directly and we would be happy to help.  ---  ## Authentication  As noted earlier, this API uses API keys for authentication. You can generate a Segnivo API key in the [API](https://messaging.segnivo.com/account/api) section of your account settings.  You must include an API key in each request to this API with the `X-API-KEY` request header.  ### Authentication error response  If an API key is missing, malformed, or invalid, you will receive an HTTP 401 Unauthorized response code.  ## Rate and usage limits  API access rate limits apply on a per-API endpoint basis in unit time. The limit is 10k requests per hour for most endpoints and 1m requests per hour for transactional/relay email-sending endpoints. Also, depending on your plan, you may have usage limits. If you exceed either limit, your request will return an HTTP 429 Too Many Requests status code or HTTP 403 if sending credits have been exhausted.  ### 503 response  An HTTP `503` response from our servers may indicate there is an unexpected spike in API access traffic, while this rarely happens, we ensure the server is usually operational within the next two to five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, contact support ([<i>developers@segnivo.com</i>](https://mailto:developers@segnivo.com)).  ### Request headers  To make a successful request, some or all of the following headers must be passed with the request.  | **Header** | **Description** | | --- | --- | | Content-Type | Required and should be `application/json` in most cases. | | Accept | Required and should be `application/json` in most cases | | Content-Length | Required for `POST`, `PATCH`, and `PUT` requests containing a request body. The value must be the number of bytes rather than the number of characters in the request body. | | X-API-KEY | Required. Specifies the API key used for authorization. |  ##### ðŸ”– Note with example requests and code snippets  If/when you use the code snippets used as example requests, remember to calculate and add the `Content-Length` header. Some request libraries, frameworks, and tools automatically add this header for you while a few do not. Kindly check and ensure yours does or add it yourself.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.segnivo.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RelayEmailRequest
 */
@JsonPropertyOrder({
  RelayEmailRequest.JSON_PROPERTY_SUBJECT,
  RelayEmailRequest.JSON_PROPERTY_FROM_NAME,
  RelayEmailRequest.JSON_PROPERTY_FROM_EMAIL,
  RelayEmailRequest.JSON_PROPERTY_REPLY_TO,
  RelayEmailRequest.JSON_PROPERTY_CONTENT_TYPE,
  RelayEmailRequest.JSON_PROPERTY_RECIPIENTS,
  RelayEmailRequest.JSON_PROPERTY_CONTENT,
  RelayEmailRequest.JSON_PROPERTY_PREHEADER,
  RelayEmailRequest.JSON_PROPERTY_CUSTOM_HEADERS,
  RelayEmailRequest.JSON_PROPERTY_DELIVERY_AT,
  RelayEmailRequest.JSON_PROPERTY_ATTACHMENTS,
  RelayEmailRequest.JSON_PROPERTY_SIGN_DKIM,
  RelayEmailRequest.JSON_PROPERTY_TRACK_CLICK,
  RelayEmailRequest.JSON_PROPERTY_TRACK_OPEN,
  RelayEmailRequest.JSON_PROPERTY_IS_TRANSACTIONAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class RelayEmailRequest {
  public static final String JSON_PROPERTY_SUBJECT = "subject";
  @javax.annotation.Nullable
  private String subject;

  public static final String JSON_PROPERTY_FROM_NAME = "from_name";
  @javax.annotation.Nullable
  private String fromName;

  public static final String JSON_PROPERTY_FROM_EMAIL = "from_email";
  @javax.annotation.Nullable
  private String fromEmail;

  public static final String JSON_PROPERTY_REPLY_TO = "reply_to";
  @javax.annotation.Nullable
  private String replyTo;

  /**
   * The content type of the email body
   */
  public enum ContentTypeEnum {
    TEXT(String.valueOf("text")),
    
    HTML(String.valueOf("html"));

    private String value;

    ContentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ContentTypeEnum fromValue(String value) {
      for (ContentTypeEnum b : ContentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONTENT_TYPE = "content_type";
  @javax.annotation.Nullable
  private ContentTypeEnum contentType = ContentTypeEnum.HTML;

  public static final String JSON_PROPERTY_RECIPIENTS = "recipients";
  @javax.annotation.Nullable
  private List<String> recipients = new ArrayList<>();

  public static final String JSON_PROPERTY_CONTENT = "content";
  @javax.annotation.Nullable
  private String content;

  public static final String JSON_PROPERTY_PREHEADER = "preheader";
  @javax.annotation.Nullable
  private String preheader;

  public static final String JSON_PROPERTY_CUSTOM_HEADERS = "custom_headers";
  @javax.annotation.Nullable
  private Object customHeaders;

  public static final String JSON_PROPERTY_DELIVERY_AT = "delivery_at";
  @javax.annotation.Nullable
  private Integer deliveryAt;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  @javax.annotation.Nullable
  private List<String> attachments = new ArrayList<>();

  public static final String JSON_PROPERTY_SIGN_DKIM = "sign_dkim";
  @javax.annotation.Nullable
  private Boolean signDkim = true;

  public static final String JSON_PROPERTY_TRACK_CLICK = "track_click";
  @javax.annotation.Nullable
  private Boolean trackClick = true;

  public static final String JSON_PROPERTY_TRACK_OPEN = "track_open";
  @javax.annotation.Nullable
  private Boolean trackOpen = true;

  public static final String JSON_PROPERTY_IS_TRANSACTIONAL = "is_transactional";
  @javax.annotation.Nullable
  private Boolean isTransactional = false;

  public RelayEmailRequest() {
  }

  public RelayEmailRequest subject(@javax.annotation.Nullable String subject) {
    
    this.subject = subject;
    return this;
  }

  /**
   * The subject of the email
   * @return subject
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(@javax.annotation.Nullable String subject) {
    this.subject = subject;
  }

  public RelayEmailRequest fromName(@javax.annotation.Nullable String fromName) {
    
    this.fromName = fromName;
    return this;
  }

  /**
   * The full name of the sender
   * @return fromName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromName() {
    return fromName;
  }


  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromName(@javax.annotation.Nullable String fromName) {
    this.fromName = fromName;
  }

  public RelayEmailRequest fromEmail(@javax.annotation.Nullable String fromEmail) {
    
    this.fromEmail = fromEmail;
    return this;
  }

  /**
   * The email of the sender
   * @return fromEmail
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromEmail() {
    return fromEmail;
  }


  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromEmail(@javax.annotation.Nullable String fromEmail) {
    this.fromEmail = fromEmail;
  }

  public RelayEmailRequest replyTo(@javax.annotation.Nullable String replyTo) {
    
    this.replyTo = replyTo;
    return this;
  }

  /**
   * The email to which replies should be sent
   * @return replyTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReplyTo() {
    return replyTo;
  }


  @JsonProperty(JSON_PROPERTY_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplyTo(@javax.annotation.Nullable String replyTo) {
    this.replyTo = replyTo;
  }

  public RelayEmailRequest contentType(@javax.annotation.Nullable ContentTypeEnum contentType) {
    
    this.contentType = contentType;
    return this;
  }

  /**
   * The content type of the email body
   * @return contentType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContentTypeEnum getContentType() {
    return contentType;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentType(@javax.annotation.Nullable ContentTypeEnum contentType) {
    this.contentType = contentType;
  }

  public RelayEmailRequest recipients(@javax.annotation.Nullable List<String> recipients) {
    
    this.recipients = recipients;
    return this;
  }

  public RelayEmailRequest addRecipientsItem(String recipientsItem) {
    if (this.recipients == null) {
      this.recipients = new ArrayList<>();
    }
    this.recipients.add(recipientsItem);
    return this;
  }

  /**
   * An array of email addresses to deliver this message
   * @return recipients
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRecipients() {
    return recipients;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipients(@javax.annotation.Nullable List<String> recipients) {
    this.recipients = recipients;
  }

  public RelayEmailRequest content(@javax.annotation.Nullable String content) {
    
    this.content = content;
    return this;
  }

  /**
   * The HTML or plain text content of the email
   * @return content
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(@javax.annotation.Nullable String content) {
    this.content = content;
  }

  public RelayEmailRequest preheader(@javax.annotation.Nullable String preheader) {
    
    this.preheader = preheader;
    return this;
  }

  /**
   * The email preheader
   * @return preheader
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREHEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreheader() {
    return preheader;
  }


  @JsonProperty(JSON_PROPERTY_PREHEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreheader(@javax.annotation.Nullable String preheader) {
    this.preheader = preheader;
  }

  public RelayEmailRequest customHeaders(@javax.annotation.Nullable Object customHeaders) {
    
    this.customHeaders = customHeaders;
    return this;
  }

  /**
   * An object of custom headers to add to the email
   * @return customHeaders
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomHeaders() {
    return customHeaders;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomHeaders(@javax.annotation.Nullable Object customHeaders) {
    this.customHeaders = customHeaders;
  }

  public RelayEmailRequest deliveryAt(@javax.annotation.Nullable Integer deliveryAt) {
    
    this.deliveryAt = deliveryAt;
    return this;
  }

  /**
   * The 10-digit unix timestamp of the date/time at which this email should be delivered
   * @return deliveryAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELIVERY_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDeliveryAt() {
    return deliveryAt;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryAt(@javax.annotation.Nullable Integer deliveryAt) {
    this.deliveryAt = deliveryAt;
  }

  public RelayEmailRequest attachments(@javax.annotation.Nullable List<String> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public RelayEmailRequest addAttachmentsItem(String attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

  /**
   * An array of URLs of files to attach to the email
   * @return attachments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachments(@javax.annotation.Nullable List<String> attachments) {
    this.attachments = attachments;
  }

  public RelayEmailRequest signDkim(@javax.annotation.Nullable Boolean signDkim) {
    
    this.signDkim = signDkim;
    return this;
  }

  /**
   * A boolean value on if a DKIM signature should be included in this message
   * @return signDkim
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGN_DKIM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSignDkim() {
    return signDkim;
  }


  @JsonProperty(JSON_PROPERTY_SIGN_DKIM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignDkim(@javax.annotation.Nullable Boolean signDkim) {
    this.signDkim = signDkim;
  }

  public RelayEmailRequest trackClick(@javax.annotation.Nullable Boolean trackClick) {
    
    this.trackClick = trackClick;
    return this;
  }

  /**
   * A boolean value on if email clicks should be tracked
   * @return trackClick
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACK_CLICK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrackClick() {
    return trackClick;
  }


  @JsonProperty(JSON_PROPERTY_TRACK_CLICK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackClick(@javax.annotation.Nullable Boolean trackClick) {
    this.trackClick = trackClick;
  }

  public RelayEmailRequest trackOpen(@javax.annotation.Nullable Boolean trackOpen) {
    
    this.trackOpen = trackOpen;
    return this;
  }

  /**
   * A boolean value on if the email opens should be tracked
   * @return trackOpen
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACK_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrackOpen() {
    return trackOpen;
  }


  @JsonProperty(JSON_PROPERTY_TRACK_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackOpen(@javax.annotation.Nullable Boolean trackOpen) {
    this.trackOpen = trackOpen;
  }

  public RelayEmailRequest isTransactional(@javax.annotation.Nullable Boolean isTransactional) {
    
    this.isTransactional = isTransactional;
    return this;
  }

  /**
   * A boolean value to flag this email as a transactional email
   * @return isTransactional
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_TRANSACTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsTransactional() {
    return isTransactional;
  }


  @JsonProperty(JSON_PROPERTY_IS_TRANSACTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsTransactional(@javax.annotation.Nullable Boolean isTransactional) {
    this.isTransactional = isTransactional;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelayEmailRequest relayEmailRequest = (RelayEmailRequest) o;
    return Objects.equals(this.subject, relayEmailRequest.subject) &&
        Objects.equals(this.fromName, relayEmailRequest.fromName) &&
        Objects.equals(this.fromEmail, relayEmailRequest.fromEmail) &&
        Objects.equals(this.replyTo, relayEmailRequest.replyTo) &&
        Objects.equals(this.contentType, relayEmailRequest.contentType) &&
        Objects.equals(this.recipients, relayEmailRequest.recipients) &&
        Objects.equals(this.content, relayEmailRequest.content) &&
        Objects.equals(this.preheader, relayEmailRequest.preheader) &&
        Objects.equals(this.customHeaders, relayEmailRequest.customHeaders) &&
        Objects.equals(this.deliveryAt, relayEmailRequest.deliveryAt) &&
        Objects.equals(this.attachments, relayEmailRequest.attachments) &&
        Objects.equals(this.signDkim, relayEmailRequest.signDkim) &&
        Objects.equals(this.trackClick, relayEmailRequest.trackClick) &&
        Objects.equals(this.trackOpen, relayEmailRequest.trackOpen) &&
        Objects.equals(this.isTransactional, relayEmailRequest.isTransactional);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, fromName, fromEmail, replyTo, contentType, recipients, content, preheader, customHeaders, deliveryAt, attachments, signDkim, trackClick, trackOpen, isTransactional);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelayEmailRequest {\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    preheader: ").append(toIndentedString(preheader)).append("\n");
    sb.append("    customHeaders: ").append(toIndentedString(customHeaders)).append("\n");
    sb.append("    deliveryAt: ").append(toIndentedString(deliveryAt)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    signDkim: ").append(toIndentedString(signDkim)).append("\n");
    sb.append("    trackClick: ").append(toIndentedString(trackClick)).append("\n");
    sb.append("    trackOpen: ").append(toIndentedString(trackOpen)).append("\n");
    sb.append("    isTransactional: ").append(toIndentedString(isTransactional)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

